name: Sync Branches GitHub to GitLab (Staged)

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repo (full clone)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.GITHUB_SOURCE_BRANCH || github.ref_name }}

      - name: Configure Git
        run: |
          git config --global user.email "${{ github.event.pusher.email }}"
          git config --global user.name "${{ github.event.pusher.name }}"

      - name: Add GitLab Remote
        env:
          GITLAB_PRIVATE_TOKEN: ${{ secrets.GITLAB_PRIVATE_TOKEN }}
          GITLAB_REPO_URL: 'https://oauth2:${{ secrets.GITLAB_PRIVATE_TOKEN }}@gitlab.com/ritambikamishra-group/gitlab_sync_test'
        run: git remote add gitlab "$GITLAB_REPO_URL"

      - name: Fetch from GitLab
        run: git fetch --prune --no-tags gitlab

      - name: Determine Branches
        run: |
          SOURCE_BRANCH="${{ env.SOURCE_BRANCH || github.ref_name }}"
          TARGET_BRANCH="${{ env.TARGET_BRANCH || 'main' }}" # Default to main, can be overridden
          SYNC_BRANCH="sync-staging" #  New:  Define the staging branch in GitLab
          echo "Source Branch: $SOURCE_BRANCH"
          echo "Target Branch: $TARGET_BRANCH"
          echo "Sync Branch: $SYNC_BRANCH"
          echo "::set-output name=source_branch::$SOURCE_BRANCH"
          echo "::set-output name=target_branch::$TARGET_BRANCH"
          echo "::set-output name=sync_branch::$SYNC_BRANCH" # Output the sync branch
        id: branch_vars

      - name: Create or Reset Sync Branch in GitLab
        env:
          GITLAB_PRIVATE_TOKEN: ${{ secrets.GITLAB_PRIVATE_TOKEN }}
          GITLAB_REPO_URL: 'https://oauth2:${{ secrets.GITLAB_PRIVATE_TOKEN }}@gitlab.com/ritambikamishra-group/gitlab_sync_test'
        run: |
          SYNC_BRANCH="${{ steps.branch_vars.outputs.sync_branch }}"
          #  Attempt to create the sync branch, or reset it if it exists
          git checkout --orphan "$SYNC_BRANCH" # Create a new orphan branch
          git reset --hard
          git checkout "$SOURCE_BRANCH" # Switch back to the source branch
          git merge --allow-unrelated-histories "$SOURCE_BRANCH"
          git push --force gitlab "$SOURCE_BRANCH":"$SYNC_BRANCH" #push the source branch to the sync branch

      - name: Attempt Merge and Push to GitLab Target
        env:
          GITLAB_PRIVATE_TOKEN: ${{ secrets.GITLAB_PRIVATE_TOKEN }}
          GITLAB_REPO_URL: 'https://oauth2:${{ secrets.GITLAB_PRIVATE_TOKEN }}@gitlab.com/ritambikamishra-group/gitlab_sync_test'
        run: |
          SOURCE_BRANCH="${{ steps.branch_vars.outputs.source_branch }}"
          TARGET_BRANCH="${{ steps.branch_vars.outputs.target_branch }}"
          SYNC_BRANCH="${{ steps.branch_vars.outputs.sync_branch }}" # Get sync branch

          #  Inform about the process
          echo "Changes have been pushed to GitLab branch '$SYNC_BRANCH'.  You should now merge '$SYNC_BRANCH' into '$TARGET_BRANCH' in GitLab."

      - name: Push Tags to GitLab
        env:
          GITLAB_PRIVATE_TOKEN: ${{ secrets.GITLAB_PRIVATE_TOKEN }}
          GITLAB_REPO_URL: 'https://oauth2:${{ secrets.GITLAB_PRIVATE_TOKEN }}@gitlab.com/ritambikamishra-group/gitlab_sync_test'
        run: git push --tags gitlab

